##引入宏定义
$!define
##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Dao"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/dao"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;

import $!{tableInfo.savePackageName}.model.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.boot.component.tk.TKMapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.data.domain.Pageable;
import java.util.List;

##使用宏定义实现类注释信息
#tableComment("表数据库访问层")

public interface $!{tableName} extends TKMapper<$!{tableInfo.name}>{

/**
* 查询单条数据
*
* @param $!tool.firstLowerCase($!{tableInfo.name}) 查询条件
* @return 返回对象
*/
$!{tableInfo.name} queryOne($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));


/**
* 查询一条数据
*
* @param $!tool.firstLowerCase($!{tableInfo.name}) 查询条件
* @return 返回对象
*/
List<$!{tableInfo.name}> queryList($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));


/**
* 批量新增数据（MyBatis原生foreach方法）
*
* @param entities List<$!{tableInfo.name}> 实例对象列表
* @return 影响行数
*/
int insertBatch(@Param("entities") List<$!{tableInfo.name}> entities);

/**
* 批量新增或按主键更新数据（MyBatis原生foreach方法）
*
* @param entities List<$!{tableInfo.name}> 实例对象列表
* @return 影响行数
* @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参
*/
int insertOrUpdateBatch(@Param("entities") List<$!{tableInfo.name}> entities);

/**
* 修改数据
*
* @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象
* @return 影响行数
*/
int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

/**
* 通过主键删除数据
*
* @param $!pk.name 主键
* @return 影响行数
*/
int deleteById($!pk.shortType $!pk.name);
}
