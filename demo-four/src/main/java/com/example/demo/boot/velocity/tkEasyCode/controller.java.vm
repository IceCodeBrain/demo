##导入宏定义
$!{define.vm}

##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Controller"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/controller"))
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;
import $!{tableInfo.savePackageName}.boot.restful.RestResponse;
import $!{tableInfo.savePackageName}.boot.restful.RestResult;
import $!{tableInfo.savePackageName}.boot.restful.PageQO;
import $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;
import $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import com.github.pagehelper.PageInfo;
import lombok.RequiredArgsConstructor;


##使用宏定义实现类注释信息
#tableComment("表控制层")

@RequiredArgsConstructor
@Api(tags = "$!{tableInfo.comment}相关功能API")
@RestController
@RequestMapping("$!tool.firstLowerCase($tableInfo.name)")
public class $!{tableName} {

/**
* 服务对象
*/
private final $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;


/**
* 分页查询
*
* @param dto 分页对象
* @return 查询结果
*/
@ApiOperation("分页查询")
@PostMapping("doQueryByPage")
public RestResult<PageInfo<$!{tableInfo.name}VO>> doQueryByPage(PageQO qo) {
return RestResponse.ok(this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryByPage(qo));
}

/**
* 通过主键查询单条数据
*
* @param id 主键
* @return 单条数据
*/
@ApiOperation("通过主键查询单条数据")
@GetMapping("doQueryById/{id}")
public RestResult<$!{tableInfo.name}VO> doQueryById(@PathVariable("id") $!pk.shortType id) {
return RestResponse.ok(this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id));
}

/**
* 新增数据
*
* @param dto 实体
* @return 新增结果
*/
@ApiOperation("新增数据")
@PostMapping("doAdd")
public RestResult<Boolean> doAdd(@RequestBody $!{tableInfo.name}DTO dto) {
return RestResponse.ok(this.$!{tool.firstLowerCase($tableInfo.name)}Service.add(dto));
}

/**
* 编辑数据
*
* @param dto 实体
* @return 编辑结果
*/
@ApiOperation("编辑数据")
@PutMapping("doEdit")
public RestResult<Boolean> doEdit(@RequestBody $!{tableInfo.name}DTO dto) {
return RestResponse.ok(this.$!{tool.firstLowerCase($tableInfo.name)}Service.update(dto));
}

/**
* 删除数据
*
* @param id 主键
* @return 删除是否成功
*/
@ApiOperation("删除数据")
@DeleteMapping("doDeleteById/{id}")
public RestResult<Boolean> doDeleteById(@PathVariable("id") $!pk.shortType id) {
  return RestResponse.ok(this.$!{tool.firstLowerCase($tableInfo.name)}Service.deleteById(id));
  }

}
